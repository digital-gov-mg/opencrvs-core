name: Publish images to Dockerhub from any branch

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: Branch to build from
        default: prod
        required: true
  pull_request:
    branches:
    - prod
  push:
    branches:
    - prod
    - dev

jobs:
  base:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      if: github.event_name == 'workflow_dispatch'
      with:
        ref: '${{ github.event.inputs.branch_name }}'

    - uses: actions/checkout@v4
      if: github.event_name == 'push'
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: actions/checkout@v4
      if: github.event_name == 'pull_request'
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set version and branch
      id: set-version-and-branch
      run: |
        export VERSION=`git log -1 --pretty=format:%h`
        echo "Pushing version $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        if [ "${{ github.event_name }}" == 'push' ]; then
        BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
        elif [ "${{ github.event_name }}" == 'pull_request' ]; then
        BRANCH=${{ github.event.pull_request.head.ref }}
        else
        BRANCH=${{ inputs.branch_name }}
        fi
        ESCAPED_BRANCH=$(echo $BRANCH | sed 's/[^a-zA-Z0-9_.-]/-/g')
        echo "from branch $BRANCH"
        echo "branch=$ESCAPED_BRANCH" >> $GITHUB_OUTPUT

    - name: Get list of services
      id: get-services
      run: |
        services=$(grep "^  [^ ]" docker-compose.yml | grep -v base| grep -v '#' | awk -F: '{print $1}' | sed -e 's/^ *//')
        services_json=$(echo $services | tr '\n' ',' | sed 's/,$//' | jq -R 'split(" ")' | tr -d '\n')
        # Set the list of service names as an output variable
        echo "services=$services_json" >> $GITHUB_OUTPUT
        echo "services=$services_json"

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push base image
      uses: docker/build-push-action@v6
      with:
        file: packages/Dockerfile.base
        context: .
        push: true
        tags: |
          siecm/ocrvs-core:base-${{ steps.set-version-and-branch.outputs.version }}
          siecm/ocrvs-core:base-${{ steps.set-version-and-branch.outputs.branch }}
        cache-from: type=registry,ref=siecm/ocrvs-core:base-${{ steps.set-version-and-branch.outputs.branch }}
        cache-to: type=inline

    outputs:
      services: ${{ steps.get-services.outputs.services }}
      version: ${{ steps.set-version-and-branch.outputs.version }}
      branch: ${{ steps.set-version-and-branch.outputs.branch }}

  # build:
  #   needs: base
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       service: ${{ fromJSON(needs.base.outputs.services) }}
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: actions/checkout@v4
  #     if: github.event_name == 'workflow_dispatch'
  #     with:
  #       ref: '${{ github.event.inputs.branch_name }}'

  #   - uses: actions/checkout@v4
  #     if: github.event_name == 'push' || github.event_name == 'pull_request'

  #   - name: Login to DockerHub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_PASSWORD }}

  #   - name: Build and push
  #     uses: docker/build-push-action@v6
  #     with:
  #       file: packages/${{ matrix.service }}/Dockerfile
  #       build-args: |
  #         VERSION=${{ needs.base.outputs.version }}
  #         BRANCH=${{ needs.base.outputs.branch }}
  #       push: true
  #       context: .
  #       tags: |
  #         siecm/ocrvs-core:${{ matrix.service }}-${{ needs.base.outputs.version }}
  #         siecm/ocrvs-core:${{ matrix.service }}-${{ needs.base.outputs.branch }}
  #       cache-from: type=registry,ref=siecm/ocrvs-core:${{ matrix.service }}-${{ needs.base.outputs.branch }}
  #       cache-to: type=inline

  trigger_countryconfig:
    runs-on: ubuntu-latest
    steps:
    - name: Trigger Workflow in Another Repo
      run: |+
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
          https://api.github.com/repos/digital-gov-mg/opencrvs-madagascar-v-1.5/actions/workflows/deploy-dev.yml/dispatches \
          -d '{
            "ref": "${{ github.ref_name }}", 
            "inputs": {
              "current_commit_id": "${{ github.sha }}",
              "current_branch_name": "${{ github.ref_name }}"
            }
          }'
          
  # security-scans-prod:
  #   needs: [ build, base ]
  #   runs-on: ubuntu-22.04
  #   if: ${{ needs.base.outputs.branch == 'prod' }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       service: ${{ fromJSON(needs.base.outputs.services) }}
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       sparse-checkout: |
  #         trivy.yaml
  #         .trivyignore.yaml
  #       sparse-checkout-cone-mode: false

  #   - name: Run Trivy vulnerability scanner
  #     uses: aquasecurity/trivy-action@0.24.0
  #     with:
  #       image-ref: 'siecm/ocrvs-core:${{ matrix.service }}-${{ needs.base.outputs.version }}'
  #       trivy-config: trivy.yaml
